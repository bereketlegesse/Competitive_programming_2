class Solution(object):
    def uniquePathsWithObstacles(self, obstacleGrid):
        n = len(obstacleGrid)
        m = len(obstacleGrid[0])
        dp = [[0 for _ in range(m)] for _ in range(n)]
        dp[0][0] = 1 - obstacleGrid[0][0]

        for i in range(n):
            for j in range(m):
                if obstacleGrid[i][j] == 0:
                    if i > 0:
                        dp[i][j] += dp[i - 1][j]

                    if j > 0:
                        dp[i][j] += dp[i][j - 1]

        return dp[-1][-1]
