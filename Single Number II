class Solution:
    def singleNumber(self, nums: List[int]) -> int:
        maxx = max(nums)
        minn = abs(min(nums))
        bits = [0]* (math.ceil(max(minn.bit_length(), maxx.bit_length())) + 2)
        num = 0

        for i in nums:
            if i < 0:
                bits[0] += 1
        
            for j in range(abs(i).bit_length() + 1):
                bits[-j-1] += min(1,(abs(i)&(1<<j)))
    
        for i in range(1,len(bits)):
            num += (bits[i] % 3)*(2**(len(bits) - i - 1))
        
        if bits[0] % 3:
            num *= -1
        
        return num
