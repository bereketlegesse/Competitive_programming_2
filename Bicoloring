from collections import defaultdict


while True:
    n = int(input())
    
    if n == 0:
        break
    edges = int(input())
    graph = defaultdict(list)
    colors = {}
    
    for _ in range(edges):
        node1, node2 = map(int, input().split())
        graph[node1].append(node2)
        graph[node2].append(node1)
    
    def dfs(node, color):
        colors[node] = color
    
        for neighbour in graph[node]:
            if neighbour in colors and colors[neighbour] == color:
                return False
            if neighbour not in colors:
                if dfs(neighbour, 1 - color) == False:
                    return False
    
        return True
    
    if dfs(1, 1):
        print("BICOLOURABLE.")
    else:
        print("NOT BICOLOURABLE.")
